---
import "../styles/app.scss";
import NavMenu from "../components/NavMenu.astro";
import { ViewTransitions } from "astro:transitions";

const { title } = Astro.props;
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="generator" content={Astro.generator} />
        <title>{title} | Kalen Wallin</title>
        <meta charset="utf-8" />
        <meta name="description" content="Projects I've worked on." />

        <!-- favicon -->
        <link
            rel="apple-touch-icon"
            sizes="180x180"
            href="/apple-touch-icon.png"
        />
        <link
            rel="icon"
            type="image/png"
            sizes="32x32"
            href="/favicon-32x32.png"
        />
        <link
            rel="icon"
            type="image/png"
            sizes="16x16"
            href="/favicon-16x16.png"
        />
        <link rel="manifest" href="/site.webmanifest" />
        <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
        <meta name="msapplication-TileColor" content="#00aba9" />
        <meta name="theme-color" content="#ffffff" />

        <base href="/" />

        <script is:inline>
            // This code is inlined in the head to make dark mode instant & blocking.
            const getThemePreference = () => {
                if (
                    typeof localStorage !== "undefined" &&
                    localStorage.getItem("theme")
                ) {
                    return localStorage.getItem("theme");
                }
                return window.matchMedia("(prefers-color-scheme: dark)").matches
                    ? "dark"
                    : "light";
            };
            const isDark = getThemePreference() === "dark";
            document.documentElement.classList[isDark ? "add" : "remove"](
                "dark-theme"
            );

            if (typeof localStorage !== "undefined") {
                // Watch the document element and persist user preference when it changes.
                const observer = new MutationObserver(() => {
                    const isDark =
                        document.documentElement.classList.contains(
                            "dark-theme"
                        );
                    localStorage.setItem("theme", isDark ? "dark" : "light");
                });
                observer.observe(document.documentElement, {
                    attributes: true,
                    attributeFilter: ["class"],
                });
            }

            <ViewTransitions />;
        </script>
    </head>
    <body>
        <app>
            <NavMenu />
            <div class="main slide-in-from-bottom-light">
                <div class="content px-4">
                    <slot />
                </div>
            </div>
        </app>
    </body>
</html>
